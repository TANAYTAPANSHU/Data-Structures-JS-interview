Circular Queue

class CircularQueue {
   constructor(size) {

     this.queue = [];
     this.read = 0;
     this.write = 0;
     this.max = size - 1;

     while (size > 0) {
        this.queue.push(null);
        size--;
     }
   }

   print() {
     return this.queue;
   }

   enqueue(item) {
    // Only change code below this line
if(this.queue[this.write]===null)
{
  if(this.write<this.max)
  {
  this.queue[this.write++]=item;
  return(item);
}
else {
  this.queue[this.write]=item;
  this.write=0;
  return(item);
}
}
else
{
  return null;
}
    // Only change code above this line
   }

   dequeue() {
    // Only change code below this line
if(this.queue[this.read]!==null)
{
   if(this.read<this.max)
  {
    let item = this.queue[this.read];
  this.queue[this.read++]=null;
  return item;
}
else 
{
  let item=this.queue[this.read];
  this.queue[this.read]=null;
  this.read=0;
  return item;
}
    // Only change code above this line
   }
   else
   {
     return null;
   }
}
}
